class CGameObject;
class CComponent abstract: public CObj
{
	DeclRTTI(CComponent,CObj)
public:
	explicit CComponent(void):m_pGameObject(NULL) {}
	virtual ~CComponent(void){}
public:
	CGameObject* GetGameObject(void) const { return m_pGameObject;}
	void		 SetGameObject(CGameObject*const _pGameObj) { m_pGameObject = _pGameObj;}
public:
	template<typename T> //매우 흥미로움
	static T& Create(CGameObject*const _pGameObj) {
		CComponent* const pComponent = new T;
		pComponent->SetGameObject(_pGameObj);
		//pComponent->SetTag(_pGameObj->GetTag());
		pComponent->Init();
		pComponent->SetActive(true);
		return *(T*)(pComponent);
	}
protected:
	CGameObject* m_pGameObject;// 현재 컴포넌트를 가지고 있는 오브젝트의 포인터를 가지고 있어야 한다.
							   // 컴포넌트끼리의 의사소통을 위해서. 컴포넌트간의 의존성을 낮추고 메세지 통신 가능케하기 위해서

private:
	CComponent& operator=(const CComponent& rhs);
	CComponent(const CComponent& rhs);
};